name: test
on:
  workflow_dispatch: null
  pull_request:
    paths:
      - 'packages/**'
  push:
    branches:
      - 'master'
    paths:
      - 'packages/**'

permissions:
  contents: read
  pull-requests: read

jobs:
  init:
    name: init
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.detect.outputs.packages }}
    steps:
      - uses: actions/checkout@v3
      - id: changes
        name: Check for new or updated files
        uses: trilom/file-changes-action@a6ca26c14274c33b15e6499323aac178af06ad4b  # v1.2.4
      - id: detect
        name: Detect changed packages
        uses: ./.github/actions/detect-packages

  test:
    if: needs.init.outputs.packages != '[]'
    name: test
    needs:
      - init
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(needs.init.outputs.packages) }}
    defaults:
      run:
        working-directory: packages/${{ matrix.package }}
    steps:
      - uses: actions/checkout@v3
      - id: job-cache
        name: Check job cache
        uses: jacksmith15/job-cache-action@4290d2b1bd0fc0d7aab01e21c3c6c8475ed57041
        with:
          prefix: ${{ matrix.package }}/
          paths: 'packages/${{ matrix.package }} .github :!*.md'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: 'x64'
      - name: Install poetry
        if: steps.job-cache.outputs.passed != 'true'
        run: |
          pip install --upgrade pip
          pip install poetry==1.6.1
      - name: Install dependencies
        if: steps.job-cache.outputs.passed != 'true'
        run: |
          poetry install
      - name: Run tests
        if: steps.job-cache.outputs.passed != 'true'
        run: |
          poetry run inv verify
